name: Docker

on:
  push:
    # tags:
    #   - 'v[0-9]+.[0-9]+'
    #   - 'v[0-9]+.[0-9]+.[0-9]+'
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ "main" ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3

      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            # For git tags like v1.2.3, create image tags:
            # - 1.2.3 (from {{version}})
            # - 1.2   (from {{major}}.{{minor}})
            # Note: if your git tag is v1.2, {{version}} will produce 1.2.0
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

            # Set 'latest' tag for releases pushed from the default branch
            type=raw,value=latest,enable={{is_default_branch}}

            # For pull requests, tag with pr-<pr_number> (image won't be pushed)
            type=ref,event=pr

            # Add commit SHA as a tag for all builds (useful for specific referencing)
            type=sha,format=short

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64 # Add your desired platforms here
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Sign the published Docker image
        if: ${{ github.event_name != 'pull_request' }}
        env:
          TAGS: ${{ steps.meta.outputs.tags }}
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
        run: |
          echo "Image digest: ${DIGEST}"
          echo "Tags to sign: ${TAGS}"
          echo "${TAGS}" | tr ',' '\n' | while read -r tag; do
            if [ -n "$tag" ]; then # Ensure tag is not empty
              echo "Signing: ${tag}@${DIGEST}"
              cosign sign --yes "${tag}@${DIGEST}"
            fi
          done
